// ðŸ‘‡ Mocked data matching the Tessitura API that will be used for stories

export const SeatData = [
  // Screen 1, Row A
  ...Array.from({ length: 4 }, (_, i) => ({
    Id: 1 + i,
    SectionId: i >= 2 ? 1 : 2,
    SeatRow: "A",
    SeatNumber: `${i + 1}`,
    ZoneId: 1,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 1,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 1, Row B
  ...Array.from({ length: 6 }, (_, i) => ({
    Id: 4 + i,
    SectionId: i >= 3 ? 1 : 2,
    SeatRow: "B",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 1,
    DisplayLetter: " ",
    HoldCodeId: i >= 1 && i < 5 ? 3 : 1,
  })),
  // Screen 1, Row C
  ...Array.from({ length: 8 }, (_, i) => ({
    Id: 11 + i,
    SectionId: i >= 4 ? 1 : 2,
    SeatRow: "C",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 1,
    DisplayLetter: " ",
    HoldCodeId: i >= 2 && i < 6 ? 4 : 1,
  })),
  // Screen 1, Row D
  ...Array.from({ length: 10 }, (_, i) => ({
    Id: 20 + i,
    SectionId: i >= 5 ? 1 : 2,
    SeatRow: "D",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 1,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 1, Row E
  ...Array.from({ length: 12 }, (_, i) => ({
    Id: 31 + i,
    SectionId: i >= 6 ? 1 : 2,
    SeatRow: "E",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 1,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 2, Row A
  ...Array.from({ length: 7 }, (_, i) => ({
    Id: 44 + i,
    SectionId: i >= 4 ? 3 : 4,
    SeatRow: "A",
    SeatNumber: `${i + 1}`,
    ZoneId: 1,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: true,
    ScreenId: 2,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 2, Row B
  ...Array.from({ length: 7 }, (_, i) => ({
    Id: 52 + i,
    SectionId: i >= 4 ? 3 : 4,
    SeatRow: "B",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: i <= 1 || i >= 5 ? 1 : 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 2,
    DisplayLetter: " ",
    HoldCodeId: i >= 1 && i < 6 ? 4 : 1,
  })),
  // Screen 2, Row C
  ...Array.from({ length: 9 }, (_, i) => ({
    Id: 60 + i,
    SectionId: i >= 5 ? 3 : 4,
    SeatRow: "C",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 2,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 2, Row D
  ...Array.from({ length: 9 }, (_, i) => ({
    Id: 70 + i,
    SectionId: i >= 5 ? 3 : 4,
    SeatRow: "D",
    SeatNumber: `${i + 1}`,
    ZoneId: 4,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 2,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 3, Row A
  ...Array.from({ length: 4 }, (_, i) => ({
    Id: 80 + i,
    SectionId: i >= 2 ? 5 : 6,
    SeatRow: "A",
    SeatNumber: `${i + 1}`,
    ZoneId: 1,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 3,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 3, Row B
  ...Array.from({ length: 6 }, (_, i) => ({
    Id: 85 + i,
    SectionId: i >= 3 ? 5 : 6,
    SeatRow: "B",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 3,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 3, Row C
  ...Array.from({ length: 8 }, (_, i) => ({
    Id: 92 + i,
    SectionId: i >= 4 ? 5 : 6,
    SeatRow: "C",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 3,
    DisplayLetter: " ",
    HoldCodeId: i >= 2 && i < 6 ? 2 : 1,
  })),
  // Screen 3, Row D
  ...Array.from({ length: 10 }, (_, i) => ({
    Id: 101 + i,
    SectionId: i >= 5 ? 5 : 6,
    SeatRow: "D",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 3,
    DisplayLetter: " ",
    HoldCodeId: i >= 3 && i < 7 ? 2 : 1,
  })),
  // Screen 3, Row E
  ...Array.from({ length: 12 }, (_, i) => ({
    Id: 112 + i,
    SectionId: i >= 6 ? 5 : 6,
    SeatRow: "E",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 3,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 4, Row A
  ...Array.from({ length: 2 }, (_, i) => ({
    Id: 125 + i,
    SectionId: 7,
    SeatRow: "A",
    SeatNumber: `${i + 1}`,
    ZoneId: 1,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: true,
    ScreenId: 4,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 4, Row B
  ...Array.from({ length: 3 }, (_, i) => ({
    Id: 128 + i,
    SectionId: 7,
    SeatRow: "B",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 4,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 4, Row C
  ...Array.from({ length: 4 }, (_, i) => ({
    Id: 132 + i,
    SectionId: 7,
    SeatRow: "C",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 4,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 4, Row D
  ...Array.from({ length: 5 }, (_, i) => ({
    Id: 137 + i,
    SectionId: 7,
    SeatRow: "D",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: i < 2 ? 1 : 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 4,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 4, Row E
  ...Array.from({ length: 6 }, (_, i) => ({
    Id: 143 + i,
    SectionId: 7,
    SeatRow: "E",
    SeatNumber: `${i + 1}`,
    ZoneId: 4,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 4,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 5, Row A
  ...Array.from({ length: 2 }, (_, i) => ({
    Id: 150 + i,
    SectionId: 8,
    SeatRow: "A",
    SeatNumber: `${i + 1}`,
    ZoneId: 1,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: true,
    ScreenId: 5,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 5, Row B
  ...Array.from({ length: 3 }, (_, i) => ({
    Id: 153 + i,
    SectionId: 8,
    SeatRow: "B",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 5,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 5, Row C
  ...Array.from({ length: 4 }, (_, i) => ({
    Id: 157 + i,
    SectionId: 8,
    SeatRow: "C",
    SeatNumber: `${i + 1}`,
    ZoneId: 2,
    AllocationId: 0,
    SeatTypeId: 1,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 5,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 5, Row D
  ...Array.from({ length: 5 }, (_, i) => ({
    Id: 162 + i,
    SectionId: 8,
    SeatRow: "D",
    SeatNumber: `${i + 1}`,
    ZoneId: 3,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: i < 2 ? 1 : 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 5,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
  // Screen 5, Row E
  ...Array.from({ length: 6 }, (_, i) => ({
    Id: 168 + i,
    SectionId: 8,
    SeatRow: "E",
    SeatNumber: `${i + 1}`,
    ZoneId: 4,
    AllocationId: 0,
    SeatTypeId: 2,
    LogicalSeatRow: 0,
    LogicalSeatNumber: 0,
    XPosition: 0,
    YPosition: 0,
    IsSeat: true,
    SeatStatusId: 0,
    AisleIndicator: 0,
    HasStairs: false,
    ScreenId: 5,
    DisplayLetter: " ",
    HoldCodeId: 1,
  })),
];
